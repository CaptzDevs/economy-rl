import { citizens } from './data/sampleAgents.js';
import { tick } from './sim/tick.js';

function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

async function runSimulation(steps = 10, delay = 500) {
  for (let i = 0; i < steps; i++) {
    const aliveCitizens = citizens.filter(c => c.alive);

    if (aliveCitizens.length === 0) {
      console.log(`\n‚ùå ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÅ‡∏•‡πâ‡∏ß ‡∏´‡∏¢‡∏∏‡∏î simulation ‡∏ó‡∏µ‡πà Tick ${i + 1}`);
      break;
    }

    console.log(`\nüìÜ Tick ${i + 1} | ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ${aliveCitizens.length} ‡∏Ñ‡∏ô`);
    tick(aliveCitizens);
    await sleep(delay);
  }

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö log
  console.log('\nüß† Logs ‡∏Ç‡∏≠‡∏á Agent ‡πÅ‡∏£‡∏Å:', citizens[0].memory.logs);
  
}


runSimulation(1000, 500); // ‡∏´‡∏ô‡πà‡∏ß‡∏á 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á tick
